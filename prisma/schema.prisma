// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  userName  String
  email     String   @unique
  password  String
  profile   Profile?
  posts     Post[]
  //profile   Profile? @relation(fields: [profileId], references: [id])
  //comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  age        Int
  pictureUrl String
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  content     String
  imageUrl    String
  publishedAt DateTime?
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  //Category    Category[]
  //comment     Comment[]
  //PostCategories PostCategories[]
  // user      User?    @relation(fields: [userId], references: [id])
  // userId    Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// model Category {
//   id        Int      @id @default(autoincrement())
//   name      String   @unique
//   posts     Post     @relation(fields: [postId], references: [id])
//   postId    Int
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   //PostCategories PostCategories[]
// }

// model Comment {
//   id        Int       @id @default(autoincrement())
//   content   String
//   user      User?     @relation(fields: [userId], references: [id])
//   userId    Int
//   parentId  Int?
//   parent    Comment?  @relation("ParentComment", fields: [parentId], references: [id])
//   replies   Comment[] @relation("ParentComment")
//   post      Post?     @relation(fields: [postId], references: [id])
//   postId    Int?
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt
// }

// model PostCategories {
//   post       Post     @relation(fields: [postId], references: [id])
//   postId     Int
//   category   Category @relation(fields: [categoryId], references: [id])
//   categoryId Int
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt

//   @@id([postId, categoryId])
// }
